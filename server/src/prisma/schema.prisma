generator client {
  provider  = "prisma-client-py"
  interface = "asyncio"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@localhost:5432/management"
}

model User {
  id                 String             @id @default(cuid())
  email              String             @unique @db.VarChar(255)
  first_name         String             @db.VarChar(255)
  last_name          String             @db.VarChar(255)
  password           String             @db.VarChar(255)
  created_at         DateTime           @default(now())
  updated_at         DateTime           @updatedAt
  verification       Verification?
  plants_collections PlantsCollection[]
}

model Verification {
  id          String   @id @default(cuid())
  verified    Boolean  @default(false)
  verified_at DateTime @updatedAt

  user_id String @unique
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model PlantsCollection {
  id         String   @id @default(cuid())
  name       String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  plants     Plant[]

  user_id String
  user    User   @relation(fields: [user_id], references: [id])
}

enum IrrigationType {
  time // Times, e.g.: [13:15:00, 01:30:00]
  period // Amount per period, e.g.: 3 times per week
}

model Plant {
  id                 String             @id @default(cuid())
  chip_id            String             @unique @db.VarChar(16)
  name               String             @default("New Plant") @db.VarChar(255)
  // waterAmount: 1000 -> 1liter
  water_amount       Int                @default(1000)
  created_at         DateTime           @default(now())
  updated_at         DateTime           @updatedAt
  auto_irrigation    Boolean            @default(true)
  irrigation_type    IrrigationType     @default(period)
  irrigations_record IrrigationRecord[]
  timestamps         Timestamp[]
  periodstamps       Periodstamp[]

  collection_id String           @unique
  collection    PlantsCollection @relation(fields: [collection_id], references: [id], onDelete: Cascade)
}

model IrrigationRecord {
  id String   @id @default(cuid())
  water_amount Int @default(1000)
  at DateTime @default(now())

  plant_id String @unique
  plant    Plant  @relation(fields: [plant_id], references: [id], onDelete: Cascade)
}

enum DayOfWeek {
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  sunday
  everyday
}

model Timestamp {
  id          String    @id @default(cuid())
  day_of_week DayOfWeek @default(everyday)
  hour        Int
  minute      Int
  second      Int       @default(0)

  plant_id String
  plant    Plant  @relation(fields: [plant_id], references: [id])
}

model Periodstamp {
  id          String    @id @default(cuid())
  day_of_week DayOfWeek @default(everyday)
  hour        Int
  minute      Int
  second      Int       @default(0)

  plant_id String
  plant    Plant  @relation(fields: [plant_id], references: [id])
}
